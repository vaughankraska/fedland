{
    "train_loss": [
        1.4277150844369093,
        1.579090913848194,
        1.1123305572878064,
        1.1615167048276234,
        0.8963721272585642,
        1.0141711056689777,
        0.8543098514037364,
        0.835712435605276,
        0.7731038819798424,
        0.8794207089697309,
        0.6321971411900142,
        0.6224301811069479,
        0.5566730818632618,
        0.5781488424676764,
        0.4672038531897928,
        0.8720122628352222,
        0.5478674680223246,
        0.4869781512281169,
        0.5496494722793169,
        0.5814377053466904
    ],
    "train_accuracy": [
        47.234,
        48.362,
        60.44,
        58.044,
        68.598,
        66.382,
        69.448,
        70.47,
        72.492,
        70.074,
        77.938,
        78.204,
        80.558,
        79.488,
        83.728,
        70.45,
        80.724,
        82.77,
        80.356,
        79.29
    ],
    "test_loss": [
        1.4611913252480422,
        1.6156376811522473,
        1.1632856764370882,
        1.2275881042963341,
        0.9768545499330834,
        1.1030664300616784,
        0.9604993794537797,
        0.9413991744005228,
        0.879024830422824,
        0.9893794655799866,
        0.7950518365147747,
        0.7961954753610152,
        0.7590083249762088,
        0.7591858792908585,
        0.684507923035682,
        1.0937936170191704,
        0.7916350002530255,
        0.7137577099890648,
        0.8071347542955906,
        0.8734368334842634
    ],
    "test_accuracy": [
        46.27,
        47.33,
        58.69,
        55.79,
        66.14,
        64.45,
        66.73,
        67.23,
        69.41,
        66.41,
        73.01,
        73.74,
        74.89,
        74.28,
        76.9,
        66.92,
        74.38,
        76.07,
        74.16,
        72.52
    ],
    "path_norm": [
        286.8583737012047,
        365.4220590632153,
        450.03673461174253,
        522.7125464822898,
        611.9786556735455,
        716.1084720557354,
        836.5667187977299,
        958.362503179251,
        1119.4773334016193,
        1282.7134325327695,
        1446.860264503798,
        1638.988560057696,
        1918.749788273604,
        2170.8735568890233,
        2471.175428819249,
        2829.302475876342,
        3132.157563086506,
        3524.1804721097924,
        4100.838450853679,
        4623.543662603393
    ],
    "model": "CifarInception(\n  (input_net): Sequential(\n    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU()\n  )\n  (inception_blocks): Sequential(\n    (0): InceptionBlock(\n      (conv_1x1): Sequential(\n        (0): Conv2d(32, 8, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n      )\n      (conv_3x3): Sequential(\n        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n        (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n        (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU()\n      )\n      (conv_5x5): Sequential(\n        (0): Conv2d(32, 8, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n        (3): Conv2d(8, 4, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))\n        (4): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU()\n      )\n      (max_pool): Sequential(\n        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n        (1): Conv2d(32, 4, kernel_size=(1, 1), stride=(1, 1))\n        (2): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): ReLU()\n      )\n    )\n    (1): InceptionBlock(\n      (conv_1x1): Sequential(\n        (0): Conv2d(32, 12, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n      )\n      (conv_3x3): Sequential(\n        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n        (3): Conv2d(16, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n        (4): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU()\n      )\n      (conv_5x5): Sequential(\n        (0): Conv2d(32, 8, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n        (3): Conv2d(8, 6, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))\n        (4): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU()\n      )\n      (max_pool): Sequential(\n        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n        (1): Conv2d(32, 6, kernel_size=(1, 1), stride=(1, 1))\n        (2): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): ReLU()\n      )\n    )\n    (2): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n    (3): InceptionBlock(\n      (conv_1x1): Sequential(\n        (0): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n      )\n      (conv_3x3): Sequential(\n        (0): Conv2d(48, 16, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n        (3): Conv2d(16, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n        (4): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU()\n      )\n      (conv_5x5): Sequential(\n        (0): Conv2d(48, 8, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n        (3): Conv2d(8, 6, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))\n        (4): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU()\n      )\n      (max_pool): Sequential(\n        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n        (1): Conv2d(48, 6, kernel_size=(1, 1), stride=(1, 1))\n        (2): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): ReLU()\n      )\n    )\n    (4): InceptionBlock(\n      (conv_1x1): Sequential(\n        (0): Conv2d(48, 16, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n      )\n      (conv_3x3): Sequential(\n        (0): Conv2d(48, 16, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n        (3): Conv2d(16, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n        (4): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU()\n      )\n      (conv_5x5): Sequential(\n        (0): Conv2d(48, 8, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n        (3): Conv2d(8, 8, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))\n        (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU()\n      )\n      (max_pool): Sequential(\n        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n        (1): Conv2d(48, 8, kernel_size=(1, 1), stride=(1, 1))\n        (2): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): ReLU()\n      )\n    )\n    (5): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n    (6): InceptionBlock(\n      (conv_1x1): Sequential(\n        (0): Conv2d(56, 16, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n      )\n      (conv_3x3): Sequential(\n        (0): Conv2d(56, 24, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n        (3): Conv2d(24, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n        (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU()\n      )\n      (conv_5x5): Sequential(\n        (0): Conv2d(56, 8, kernel_size=(1, 1), stride=(1, 1))\n        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (2): ReLU()\n        (3): Conv2d(8, 8, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))\n        (4): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (5): ReLU()\n      )\n      (max_pool): Sequential(\n        (0): MaxPool2d(kernel_size=3, stride=1, padding=1, dilation=1, ceil_mode=False)\n        (1): Conv2d(56, 8, kernel_size=(1, 1), stride=(1, 1))\n        (2): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (3): ReLU()\n      )\n    )\n  )\n  (output_net): Sequential(\n    (0): AdaptiveAvgPool2d(output_size=(1, 1))\n    (1): Flatten(start_dim=1, end_dim=-1)\n    (2): Linear(in_features=64, out_features=10, bias=True)\n  )\n)"
}